[tox]
envlist = {py312}, lint, mypy, pytest, coverage, docs

[testenv:py{312}-bandit]
description = invoke bandit to verify security
deps =
    bandit

commands =
    bandit -r src

[testenv:py{312}-safety]
description = invoke safety to verify security
deps =
    safety
    pip~=24.0

commands =
    safety check

[check-manifest]
ignore =
    .idea/inspectionProfiles/profiles_settings.xml
    .idea/inspectionProfiles/Project_Default.xml
    .idea/misc.xml
    .idea/modules.xml
    .idea/other.xml
    .idea/scottbrian_algo1.iml
    .idea/vcs.xml
    .idea/codeStyles/codeStyleConfig.xml
    .idea/dataSources.xml


[testenv:manifest]
description = invoke check-manifest to check manifest

deps =
    check-manifest

commands =
    check-manifest

;[testenv:format]
;description = format the files using black
;
;deps = black
;skip_install = true
;command = black .

[flake8]
max-doc-length = 72
max-line-length = 88
select = C, E, F, W, B, B950
extend-ignore = E203, W503

[testenv:lint]
description = invoke flake8 to check style

deps =
    flake8
    flake8-docstrings
    darglint

commands =
    flake8 --statistics --docstring-convention google src/scottbrian_algo1/
    flake8 --statistics --docstring-convention google tests/test_scottbrian_algo1/

    # apparently, having darglint installed via deps causes flake8 to call it similar to the following calls
    # darglint -v 2 src/scottbrian_algo1/
    # darglint -v 2 tests/test_scottbrian_algo1/

[testenv:darglint]
description = invoke darglint to check style

deps =
    darglint

[darglint]
ignore=DAR402

commands =

    darglint -v 2 src/scottbrian_algo1/
    darglint -v 2 tests/test_scottbrian_algo1/


[testenv:mypy]
description = invoke mypy to check types

deps =
    mypy
    pytest
    sybil

commands =
;    mypy src/scottbrian_algo1/algo_app.py --exclude src/ibapi/ --follow-imports=error
    mypy src/scottbrian_algo1/
;    mypy src/scottbrian_algo1/ --follow-imports=error
    mypy tests/test_scottbrian_algo1/test_algo_api.py --cache-dir=/dev/null --enable-incomplete-feature=Unpack
;    mypy tests/test_scottbrian_algo1/ --cache-dir=/dev/null --show-absolute-path

[testenv:py{312}-doctest]
description = invoke pytest with doctest option on the package
# need a separate doctest here instead of using doctest in the above pytest run because doctest adds the source paths
# to sys.path which causes pytest to import from the source directory instead of from the virtual env site-packages,
# which defeats the purpose of building the virtual env and installing the package to test the actual build

deps =
    pytest
    sybil

commands =
    pytest --ignore=tests -p no:threadexception

[testenv:py{312}-coverage]
description = invoke pytest-cov on the package

deps =
    pytest
    pytest-cov
    sybil

commands =
    pytest --cov=scottbrian_algo1 --cov-report=term --cov-report=html -p no:threadexception tests/test_scottbrian_algo1/test_algo_api.py
;    pytest --cov=scottbrian_algo1 --cov-report=term --cov-report=html -p no:threadexception -m cover tests/test_scottbrian_algo1/test_algo_app.py
;    pytest --cov=scottbrian_algo1 --cov-report=term --cov-report=html -p no:threadexception

[testenv:py{312}-pytest]
description = invoke pytest on the package
deps =
    pytest
    sybil

commands =
    pytest --import-mode=importlib --capture=tee-sys -p no:threadexception tests/test_scottbrian_algo1/test_algo_api.py
;    pytest --import-mode=importlib --capture=tee-sys -p no:threadexception -m seltest tests/test_scottbrian_paratools/test_smart_thread.py
;    pytest --import-mode=importlib --capture=tee-sys


[testenv:docs]
description = invoke sphinx-build to build the HTML docs

basepython =
    python3.12
deps =
    sphinx
    sphinx-autodoc-typehints
    sphinx_rtd_theme
    pytest
    sybil

commands =
    sphinx-build -b html docs/source docs/build -W -a -E
    python -c 'import pathlib; print("documentation available under file://\{0\}".format(pathlib.Path(r"docs") / "build" / "index.html"))'